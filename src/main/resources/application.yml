server:
  port: 7070

spring:
  application:
    name: api-gateway-server
  config:
    import: "optional:configserver:http://localhost:8071"
  cloud:
    gateway:
      server:
        webflux:
          discovery:
            locator:
              enabled: true
              lower-case-service-id: true
  data:
    redis:
      host: localhost        # or your Redis server IP / DNS
      port: 6379
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://localhost:7080/realms/master/protocol/openid-connect/certs"

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    gateway:
      access: UNRESTRICTED

  info:
    env:
      enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/   # URL of Eureka Server
    register-with-eureka: true                     # Register with Eureka Server
    fetch-registry: true                            # Fetch registry from Eureka Server
    registry-fetch-interval-seconds: 10  # default 30

info:
  app:
    name: ${spring.application.name}
    description: "API Gateway Server for routing requests to microservices"
    version: "1.0.0"

logging:
  level:
    org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory: DEBUG
    org.springframework.cloud.gateway.filter.ratelimit: DEBUG